# (re)create batch scripts in the current directory with correct paths for windows

import os

if os.name == "posix":

    f=open('rules','w')
    f.write((\
    """
# These predefined variables may be set in the Makefile
#
# EXECUTABLE        name of final program
# LINKER            set this if the linker is different from the compiler
# LINKFLAGS         extra flags to pass to the linker
# FREEFLAGS         extra flags for compiling free form files
# FIXEDFLAGS        extra flags for compiling fixed form files
# PREFIXEDFLAGS     extra flags for compiling fixed form files with preprocessing directives
# PREFREEFLAGS      extra flags for compiling free form files with preprocessing directives
# ORGSRCDIR         build project from all files in $(ORGSRCDIR)/.files and SOURCEFILES, where files
#                   in the latter override files in the former

## get the list of object files

include .mkdep_objects

## if EXECUTABLE or FORTRANCOMPILER is not set, default

ifeq ($(strip $(EXECUTABLE)),)
   EXECUTABLE=a.out
endif
ifeq ($(strip $(FORTRANCOMPILER)),)
   FORTRANCOMPILER=gfortran
endif
ifeq ($(strip $(LINKER)),)
   LINKER=$(FORTRANCOMPILER)
endif
ifeq ($(strip $(ENCODING)),)
   ENCODING=utf-8
endif

## the link happen here
$(EXECUTABLE):$(OBJS)
\t$(LINKER) -o $(EXECUTABLE) $(OBJS) $(LINKFLAGS)

## get the autogenerated dependencies

include .mkdep_dependencies

## delete object files (keep mkdep stuff)
clean:
\trm -f build/*.mod *.mod *~ $(EXECUTABLE) $(MAINLIB)
\trmobjs .mkdep_objects
\tmkdep reset
\tmake dep

## (re)generate dependencies
dep:
\techo "" > .files
\tfor dir in $(SOURCEFILES); do \\
\t   echo "$$dir" >> .files ; \\
\tdone
\tfor dir in $(SOURCEFILES2); do \\
\t   echo "$$dir OPT2" >> .files ; \\
\tdone
\tif [ "$(strip $(ORGSRCDIR))" != "" ] ; then \\
\t   echo $(ORGSRCDIR) > .incdirs ;\\
\t   echo "." >> .incdirs ;\\
\t   mergedotfiles $(ORGSRCDIR) ;\\
\telse \\
\t   echo "." > .incdirs ;\\
\t   mergedotfiles NOORGSRCDIR ;\\
\tfi
\tmkdep -e $(ENCODING) -i .incdirs .files

## explicit rules for each and every file
include .mkdep_rules
\n"""))

    f.close()
   


if os.name == "nt":
    pwd = os.getcwd()

    f=open('mkdep.bat','w')
    f.write(("@python "+pwd+"\\mkdep %1 %2 %3 %4 %5 %6 %7 %8 %9\n"))
    f.close()

    f=open('mklib.bat','w')
    f.write(("@python "+pwd+"\\mklib %1 %2 %3 %4 %5 %6\n"))
    f.close()

    f=open('rmobjs.bat','w')
    f.write(("@python "+pwd+"\\rmobjs %1\n"))
    f.close()

    f=open('pgrep.bat','w')
    f.write(("@python "+pwd+"\\pgrep.py %1 %2\n"))
    f.close()

    f=open('callstack.bat','w')
    f.write(("@python "+pwd+"\\callstack.py %1\n"))
    f.close()

    f=open('calltree.bat','w')
    f.write(("@python "+pwd+"\\calltree.py %1\n"))
    f.close()

    f=open('mergedotfiles.bat','w')
    f.write(("@python "+pwd+"\\mergedotfiles %1\n"))
    f.close()
    
    f=open('rules','w')
    f.write((\
    """
# These predefined variables may be set in the Makefile
#
# EXECUTABLE        name of final program
# LINKER            set this if the linker is different from the compiler
# LINKFLAGS         extra flags to pass to the linker
# FREEFLAGS         extra flags for compiling free form files
# FIXEDFLAGS        extra flags for compiling fixed form files
# PREFIXEDFLAGS     extra flags for compiling fixed form files with preprocessing directives
# PREFREEFLAGS      extra flags for compiling free form files with preprocessing directives
# ORGSRCDIR         build project from all files in $(ORGSRCDIR)/.files and SOURCEFILES, where files
#                   in the latter override files in the former
#
# For the script to work properly, make sure the mkdep directory is
# early in the path, e.g. if mkdep is in D:\ execute
#   set path=d:/mkdep;%path%

## get the list of object files
include .mkdep_objects

## if EXECUTABLE or FORTRANCOMPILER is not set, default
ifeq ($(strip $(EXECUTABLE)),)
   EXECUTABLE=a.exe
endif
ifeq ($(strip $(FORTRANCOMPILER)),)
   FORTRANCOMPILER=gfortran
endif
ifeq ($(strip $(LINKER)),)
   LINKER=$(FORTRANCOMPILER)
endif
ifeq ($(strip $(ENCODING)),)
   ENCODING=utf-8
endif

## the link happen here
$(EXECUTABLE):$(OBJS)
\t$(LINKER) -o $(EXECUTABLE) $(OBJS) $(LINKFLAGS)

## get the autogenerated dependencies

include .mkdep_dependencies

## delete object files (keep mkdep stuff)

clean:
\trm -f build/*.mod *.mod *~ $(EXECUTABLE) $(MAINLIB)
\trmobjs.bat .mkdep_objects
\tmkdep.bat reset
\tmake dep

## (re)generate dependencies
dep:
\techo "" > .files
\tfor dir in $(SOURCEFILES); do \\
\t   echo "$$dir" >> .files ; \\
\tdone
\tfor dir in $(SOURCEFILES2); do \\
\t   echo "$$dir OPT2" >> .files ; \\
\tdone
\tif [ "$(strip $(ORGSRCDIR))" != "" ] ; then \\
\t   echo $(ORGSRCDIR) > .incdirs ;\\
\t   echo "." >> .incdirs ;\\
\t   mergedotfiles.bat $(ORGSRCDIR) ;\\
\telse \\
\t   echo "." > .incdirs ;\\
\t   mergedotfiles.bat NOORGSRCDIR ;\\
\tfi
\tmkdep.bat -e $(ENCODING) -i .incdirs .files

## explicit rules for each and every file
include .mkdep_rules
\n"""))

    f.close()

